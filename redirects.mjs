// @ts-check

const reactRedirects = {
	// providers
	"/react/react.thirdwebprovider": "/react/ThirdwebProvider",
	"/react/react.thirdwebsdkprovider": "/react/ThirdwebSDKProvider",
	// wallets
	"/react/react.metamaskwallet": "/references/react/metamaskWallet",
	"/react/react.coinbasewallet": "/references/react/coinbaseWallet",
	"/react/react.walletconnect": "/references/react/walletconnect",
	"/react/react.smartwallet": "/references/react/smartWallet",
	"/react/react.embeddedwallet": "/references/react/embeddedWallet",
	"/react/react.paperwallet": "/references/react/embeddedWallet",
	"/react/react.localwallet": "/references/react/localWallet",
	"/react/react.trustWallet": "/references/react/trustWallet",
	"/react/react.zerion": "/references/react/zerionWallet",
	"/react/react.magiclink": "/references/react/magicLink",
	"/react/react.safewallet": "/references/react/safeWallet",
	"/react/react.blocto": "/references/react/bloctoWallet",
	"/react/react.frame": "/references/react/frameWallet",
	"/react/react.phantom": "/references/react/phantomWallet",
	"/react/react.rainbowWallet": "/references/react/rainbowWallet",
	"/react/react.coin98": "/references/react/coin98Wallet",
	"/react/react.core": "/references/react/coreWallet",
	"/react/react.defiwallet": "/references/react/cryptoDefiWallet",
	"/react/react.okx": "/references/react/okxWallet",
	"/react/react.onekey": "/references/react/oneKeyWallet",
	"/react/react.rabby": "/references/react/rabbyWallet",
	// components
	"/react/react.connectwallet": "/react/components/ConnectWallet",
	"/react/react.web3button": "/react/components/Web3Button",
	"/react/react.thirdwebnftmedia": "/react/components/ThirdwebNftMedia",
	"/react/react.mediarenderer": "/react/components/MediaRenderer",
	// hooks
	"/react/react.useaddress": "/references/react/useAddress",
	"/react/react.usecontract": "/references/react/useContract",
	"/react/react.usecontractread": "/references/react/useContractRead",
	"/react/react.usecontractwrite": "/references/react/useContractWrite",
	"/react/react.usecontractevents": "/references/react/useContractEvents",
	"/react/react.usesdk": "/references/react/useSDK",
	"/react/react.useactiveclaimcondition": "/references/react/useActiveClaimCondition",
	"/react/react.useactiveclaimconditionforwallet": "/references/react/useActiveClaimConditionForWallet",
	"/react/react.useclaimconditions": "/references/react/useClaimConditions",
	"/react/react.useclaimerproofs": "/references/react/useClaimerProofs",
	"/react/react.useclaimineligibilityreasons": "/references/react/useClaimIneligibilityReasons",
	"/react/react.usesetclaimconditions": "/references/react/useSetClaimConditions",
	"/react/react.usebatchestoreveal": "/references/react/useBatchesToReveal",
	"/react/react.usedelayedreveallazymint": "/references/react/useDelayedRevealLazyMint",
	"/react/react.usereveallazymint": "/references/react/useRevealLazyMint",
	"/react/react.useacceptdirectlistingoffer": "/references/react/useAcceptDirectListingOffer",
	"/react/react.useactivelistings": "/references/react/useActiveListings",
	"/react/react.useauctionwinner": "/references/react/useAuctionWinner",
	"/react/react.usebidbuffer": "/references/react/useBidBuffer",
	"/react/react.usebuydirectlisting": "/references/react/useBuyDirectListing",
	"/react/react.usebuynow": "/references/react/useBuyNow",
	"/react/react.usecanceldirectlisting": "/references/react/useCancelDirectListing",
	"/react/react.usecancelenglishauction": "/references/react/useCancelEnglishAuction",
	"/react/react.usecancellisting": "/references/react/useCancelListing",
	"/react/react.usecreateauctionlisting": "/references/react/useCreateAuctionListing",
	"/react/react.usecreatedirectlisting": "/references/react/useCreateDirectListing",
	"/react/react.usedirectlisting": "/references/react/useDirectListing",
	"/react/react.usedirectlistings": "/references/react/useDirectListings",
	"/react/react.usedirectlistingscount": "/references/react/useDirectListingsCount",
	"/react/react.useenglishauction": "/references/react/useEnglishAuction",
	"/react/react.useenglishauctions": "/references/react/useEnglishAuctions",
	"/react/react.useenglishauctionscount": "/references/react/useEnglishAuctionsCount",
	"/react/react.useenglishauctionwinningbid": "/references/react/useEnglishAuctionWinningBid",
	"/react/react.useexecuteauctionsale": "/references/react/useExecuteAuctionSale",
	"/react/react.uselisting": "/references/react/useListing",
	"/react/react.uselistings": "/references/react/useListings",
	"/react/react.uselistingscount": "/references/react/useListingsCount",
	"/react/react.usemakebid": "/references/react/useMakeBid",
	"/react/react.usemakeoffer": "/references/react/useMakeOffer",
	"/react/react.useminimumnextbid": "/references/react/useMinimumNextBid",
	"/react/react.useoffers": "/references/react/useOffers",
	"/react/react.usevaliddirectlistings": "/references/react/useValidDirectListings",
	"/react/react.usevalidenglishauctions": "/references/react/useValidEnglishAuctions",
	"/react/react.usewinningbid": "/references/react/useWinningBid",
	"/react/react.usecompilermetadata": "/references/react/useCompilerMetadata",
	"/react/react.usecontracttype": "/references/react/useContractType",
	"/react/react.usemetadata": "/references/react/useMetadata",
	"/react/react.useresolvedmediatype": "/references/react/useResolvedMediaType",
	"/react/react.useupdatemetadata": "/references/react/useUpdateMetadata",
	"/react/react.usechain": "/references/react/useChain",
	"/react/react.useSwitchChain": "/references/react/useSwitchChain",
	"/react/react.usechainid": "/references/react/useChainId",
	"/react/react.usenft": "/references/react/useNFT",
	"/react/react.useairdropnft": "/references/react/useAirdropNFT",
	"/react/react.useburnnft": "/references/react/useBurnNFT",
	"/react/react.usemintnft": "/references/react/useMintNFT",
	"/react/react.usemintnftsupply": "/references/react/useMintNFTSupply",
	"/react/react.usenftbalance": "/references/react/useNFTBalance",
	"/react/react.usenfts": "/references/react/useNFTs",
	"/react/react.useownednfts": "/references/react/useOwnedNFTs",
	"/react/react.usetotalcirculatingsupply": "/references/react/useTotalCirculatingSupply",
	"/react/react.usetotalcount": "/references/react/useTotalCount",
	"/react/react.usetransfernft": "/references/react/useTransferNFT",
	"/react/react.useclaimednfts": "/references/react/useClaimedNFTs",
	"/react/react.useclaimednftsupply": "/references/react/useClaimedNFTSupply",
	"/react/react.useclaimnft": "/references/react/useClaimNFT",
	"/react/react.uselazymint": "/references/react/useLazyMint",
	"/react/react.useresetclaimconditions": "/references/react/useResetClaimConditions",
	"/react/react.useunclaimednfts": "/references/react/useUnclaimedNFTs",
	"/react/react.useunclaimednftsupply": "/references/react/useUnclaimedNFTSupply",
	"/react/react.useallrolemembers": "/references/react/useAllRoleMembers",
	"/react/react.usegrantrole": "/references/react/useGrantRole",
	"/react/react.useisaddressrole": "/references/react/useIsAddressRole",
	"/react/react.userevokerole": "/references/react/useRevokeRole",
	"/react/react.userolemembers": "/references/react/useRoleMembers",
	"/react/react.useplatformfees": "/references/react/usePlatformFees",
	"/react/react.useprimarysalerecipient": "/references/react/usePrimarySaleRecipient",
	"/react/react.useroyaltysettings": "/references/react/useRoyaltySettings",
	"/react/react.useupdateplatformfees": "/references/react/useUpdatePlatformFees",
	"/react/react.useupdateprimarysalerecipient": "/references/react/useUpdatePrimarySaleRecipient",
	"/react/react.useupdateroyaltysettings": "/references/react/useUpdateRoyaltySettings",
	"/react/react.usebalance": "/references/react/useBalance",
	"/react/react.usebalanceforaddress": "/references/react/useBalanceForAddress",
	"/react/react.useburntoken": "/references/react/useBurnToken",
	"/react/react.useminttoken": "/references/react/useMintToken",
	"/react/react.usetokenbalance": "/references/react/useTokenBalance",
	"/react/react.usetokendecimals": "/references/react/useTokenDecimals",
	"/react/react.usetokensupply": "/references/react/useTokenSupply",
	"/react/react.usetransferbatchtoken": "/references/react/useTransferBatchToken",
	"/react/react.usetransfertoken": "/references/react/useTransferToken",
	"/react/react.useclaimtoken": "/references/react/useClaimToken",
	"/react/react.useconnect": "/references/react/useConnect",
	"/react/react.usedisconnect": "/references/react/useDisconnect",
	"/react/react.usewallet": "/references/react/useWallet",
	"/react/react.useconnectionstatus": "/references/react/useConnectionStatus",
	"/react/react.usesigner": "/references/react/useSigner",
	"/react/react.usemetamask": "/references/react/useMetamask",
	"/react/react.usecoinbasewallet": "/references/react/useCoinbaseWallet",
	"/react/react.usewalletconnect": "/references/react/useWalletConnect",
	"/react/react.usesmartwallet": "/references/react/useSmartWallet",
	"/react/react.useembeeddedwallet": "/references/react/useEmbeddedWallet",
	"/react/react.usesafe": "/references/react/useSafe",
	"/react/react.usemagic": "/references/react/useMagic",
	"/react/react.userainbowwallet": "/references/react/useRainbowWallet",
	"/react/react.usetrustwallet": "/references/react/useTrustWallet",
	"/react/react.usebloctowallet": "/references/react/useBloctoWallet",
	"/react/react.useframewallet": "/references/react/useFrameWallet",
	"/react/react.usesetconnectedwallet": "/references/react/useSetConnectedWallet",
	"/react/react.usesetconnectionstatus": "/references/react/useSetConnectionStatus",
	"/react/react.usecreatewalletinstance": "/references/react/useCreateWalletInstance",
	"/react/react.usewalletconfig": "/references/react/useWalletConfig",
	"/react/react.useaccountadmins": "/references/react/useAccountAdmins",
	"/react/react.useaccountadminsandsigners": "/references/react/useAccountAdminsAndSigners",
	"/react/react.useaccountsigners": "/references/react/useAccountSigners",
	"/react/react.useaddadmin": "/references/react/useAddAdmin",
	"/react/react.usecreatesessionkey": "/references/react/useCreateSessionKey",
	"/react/react.useremoveadmin": "/references/react/useRemoveAdmin",
	"/react/react.userevokesessionkey": "/references/react/useRevokeSessionKey",
	"/react/react.uselogin": "/references/react/useLogin",
	"/react/react.uselogout": "/references/react/useLogout",
	"/react/react.useuser": "/references/react/useUser",
	"/react/react.usestorage": "/references/react/useStorage",
	"/react/react.usestorageupload": "/references/react/useStorageUpload",
};

/**
 * @type {import('next').NextConfig['redirects']}
 */
export const redirects = async () => {
	return [...createRedirects(reactRedirects)];
};

/**
 *
 * @param {Record<string, string>} linkMap
 * @returns
 */
function createRedirects(linkMap, permanent = true) {
	const redirects = [];
	for (const key in linkMap) {
		redirects.push({ source: key, destination: linkMap[key], permanent });
	}
	return redirects;
}
